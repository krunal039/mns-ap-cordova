!function(){"use strict";function e(e,t,n,o,r){function c(){return t.$broadcast.apply(t,arguments)}function i(t,n){return e.all(t).then(function(e){var t={controllerId:n};c(o.config.controllerActivateSuccessfulEvent,t)})}var a={$broadcast:c,$q:e,$timeout:n,logger:r,activateController:i};return a}var t=angular.module("common",[]);t.provider("commonConfig",function(){this.config={},this.$get=function(){return{config:this.config}}}),t.factory("common",["$q","$rootScope","$timeout","commonConfig","logger",e])}(),function(){"use strict";function e(e,t){function n(e,t,n,o){i(e,t,n,o,"info")}function o(e,t,n,o){i(e,t,n,o,"error")}function r(e,t,n,o){i(e,t,n,o,"success")}function c(e,t,n,o){i(e,t,n,o,"warning")}function i(t,n,o,r,c){r=r||!0;var i="error"===c?e.error:e.log;o=o?"["+o+"] ":"",i(o," ["+moment().format("MMMM Do YYYY, h:mm:ss a")+"] ",t,n)}var a={log:n,logError:o,logSuccess:r,logWarning:c};return a}angular.module("common").factory("logger",["$log","config",e])}(),function(){"use strict";function e(e,t,r){function c(){e.log(n,"controller loaded",null,o),t.activateController([],o),i()}function i(){var e=r.login();e.then(function(e){t.logger.log("User logged in",e,o),window.location="app.html"},function(e){t.logger.log("User logged in error",e,o);var n=confirm("An Error occured. Do you want to retry?\n"+JSON.stringify(e));n?c():vm.errorMessage=JSON.stringify(e)})}c()}var t=angular.module("MnS.ActivityPlanner",["common","ngCookies","angular-data.DSCacheFactory"]);t.run(["DSCacheFactory",function(e){e("activityAppConfigCache",{storageMode:"localStorage",maxAge:24e5,deleteOnExpire:"aggressive"})}]),t.config(["$logProvider",function(e){e.debugEnabled&&e.debugEnabled(!0)}]);var n,o;o="appLauncher",n="["+o+"] ",t.controller(o,["$log","common","spContext",e])}(),function(){"use strict";var e=angular.module("MnS.ActivityPlanner"),t={controllerActivateSuccess:"controller.activateSuccess",workingOnItToggle:"workingonit.toggle"},n={title:"M&S Activity Planner",appErrorPrefix:"[SYSERR] ",events:t,version:"1.0.0.0",showDebugNotiSetting:!1,isCurrentUserActivityMember:!1};e.value("config",n),e.config(["$logProvider",function(e){e.debugEnabled&&e.debugEnabled(!0)}]),e.config(["commonConfigProvider",function(e){e.config.controllerActivateSuccessEvent=n.events.controllerActivateSuccess,e.config.workingOnItToggleEvent=n.events.workingOnItToggle}])}(),function(){"use strict";function e(e,o,r){function c(){document.addEventListener("deviceready",i,!1)}function i(){v.authenticationContext=Microsoft.ADAL.AuthenticationContext}function a(){var n=e.defer();return v.authenticationContext=Microsoft.ADAL.AuthenticationContext,v.authenticationContext.createAsync(f.authority).then(function(e){v.authContext=e,o.logger.log("Created context successfully: ",e,t),n.resolve(e)},function(e){o.logger.error("Error in creating context successfully: ",e,t),n.reject(e)}),n.promise}function u(){var t=e.defer();return a().then(function(e){v.authContext.acquireTokenAsync(f.resourceUrl,f.appId,f.redirectUrl).then(function(e){v.authResult=e,v.accessToken=context.accessToken,t.resolve(e)},function(e){t.reject(e)})},function(e){t.reject(e)}),t.promise}function l(e){var n;v.authContext.tokenCache.readItems().then(function(r){r.length>1&&(n=r[0].userInfo.userId),v.authContext.acquireTokenSilentAsync(f.resourceUrl,f.appId,n).then(function(n){o.logger.log("Acquired token successfully: ",n,t),v.authResult=n,v.accessToken=context.accessToken,e.resolve(n)},function(n){o.logger.error("Failed to acquire token silently: ",n,t),e.reject("Failed to acquire token silently")})},function(t){u().then(function(n){e.resolve(t)},function(t){e.reject(t)}),e.reject(t)})}function s(){var t=e.defer();return a().then(function(e){l(t)},function(e){t.reject(e)}),t.promise}function g(){var r=e.defer(),c="loginContextData",i=self.activityAppConfig.get(c);if(i&&i.expireOn&&new Date(i.expireOn)>new Date)o.logger.log("Found App config data inside cache",appConfigData,t),v.authContext=i,v.accessToken=i.accessToken,r.resolve(i);else{o.logger.log(n,"createing spcontext for app to authenticate and authorize",null);var a=s();a.then(function(e){v.accessToken=e.accessToken,v.authResult=e,self.activityAppConfig.put(c,e),r.resolve(e)},function(e){o.logger.error("Failed to acquire token silently. calling acquireToken.",e,t);var n=u();n.then(function(e){o.logger.log("Acquired token successfully: ",e,t),v.accessToken=e.accessToken,v.authResult=e,self.activityAppConfig.put(c,e),r.resolve(e)},function(e){o.logger.error("Error in acquired token: ",e,t),r.reject(e)})})}return r.promise}c(),self.activityAppConfig=r.get("activityAppConfigCache"),self.activityAppConfig.setOptions({onExpire:function(e,n){g().then(function(){o.logger.log("user token was automatically refreshed.",{},t)},function(){o.logger.log("Error getting user token. Putting expired item back in the cache.",{},t),self.activityAppConfig.put(e,n)})}});var f={authority:"https://activity-login.windows.net/kmpdev.onmicrosoft.com",resourceUrl:"https://kmpdev.sharepoint.com/",appId:"4773b87f-3701-487c-b0cb-93ff4ac893c4",redirectUrl:"http://localhost:4400/services/aad/redirectTarget.html",tenantName:"development"},v={authenticationContext:null,authContext:null,authResult:null,accessToken:null},d={url:f.resourceUrl+"sites/pinterest/"};return{loginContext:v,login:g,adalContext:f,hostWeb:d}}var t="spContext",n="["+t+"] ";angular.module("MnS.ActivityPlanner").service(t,["$q","common","DSCacheFactory",e])}();